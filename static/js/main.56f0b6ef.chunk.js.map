{"version":3,"sources":["screens/MeetingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","path","MeetingScreen","myVideo","useRef","userVideo","connectionRef","RTCPeerConnection","textRef","_useState","useState","_useState2","Object","slicedToArray","offerVisible","setOfferVisible","_useState3","_useState4","answevisible","setAnswerVisible","_useState5","_useState6","status","setstatus","useEffect","on","success","console","log","data","stream","current","setRemoteDescription","RTCSessionDescription","value","JSON","stringify","type","candidate","addIceCandidate","RTCIceCandidate","navigator","mediaDevices","getUserMedia","Audio","video","then","srcObject","getTracks","forEach","track","_pc","addTrack","id","catch","error","onicecandidate","e","sendToPeer","oniceconnectionstatechange","ontrack","streams","eventType","playLoad","emit","processSDP","setLocalDescription","createOffer","offerToReceiveAudio","offerToReceiveVideo","createAnswer","react_default","a","createElement","Fragment","Box","ref","autoPlay","style","width","border","onClick","App","className","screens_MeetingScreen","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.56f0b6ef.chunk.js","sourcesContent":["import { Box} from '@mui/system'\r\nimport React, { useEffect, useState,useRef } from 'react'\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('/webRTCPeers',{path: '/webrtc'} )\r\nconst MeetingScreen = () => {\r\n  \r\n\tconst myVideo = useRef()\r\n\tconst userVideo = useRef()\r\n\tconst connectionRef= useRef(new RTCPeerConnection(null));\r\n  const textRef = useRef();\r\n  const [offerVisible ,setOfferVisible]= useState(true);\r\n  const [answevisible ,setAnswerVisible]= useState(false);\r\n  const [status, setstatus] = useState(\"Make a call now\");\r\n\r\n  useEffect(() => {\r\n    socket.on('connection-success',success=>{\r\n      console.log(success);\r\n    })\r\n    socket.on('sdp',data=>{\r\n      console.log(data.stream );\r\n      connectionRef.current.setRemoteDescription(new RTCSessionDescription(data.stream))\r\n      textRef.current.value= JSON.stringify(data.stream);\r\n      if(data.stream.type==\"offer\"){\r\n        setOfferVisible(false);\r\n        setAnswerVisible(true);\r\n        setstatus(\"Incoming Call ....\")\r\n      }\r\n      else{\r\n        setstatus('Call establshed ')\r\n      }\r\n    })\r\n    socket.on('candidate', candidate=>{\r\n      console.log(candidate);\r\n      connectionRef.current.addIceCandidate(new RTCIceCandidate(candidate))\r\n    })\r\n\r\n    const constraints ={\r\n      Audio:true,\r\n      video:true\r\n    }\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n    .then(stream => {\r\n      myVideo.current.srcObject = stream;\r\n      stream.getTracks().forEach(track=>{\r\n        _pc.addTrack(track,stream)\r\n      })\r\n      console.log('Got MediaStream:', stream.id);\r\n  })\r\n  .catch(error => {\r\n      console.error('Error accessing media devices.', error);\r\n  });\r\n  \r\n  const _pc = new RTCPeerConnection(null);\r\n  _pc.onicecandidate = (e)=>{\r\n    if(e.candidate){\r\n      console.log(JSON.stringify(e.candidate));\r\n      sendToPeer('candidate',e.candidate);\r\n    }\r\n\r\n  }\r\n  _pc.oniceconnectionstatechange =(e)=>{\r\n    console.log(e,\"iceconnection\");\r\n  }\r\n  _pc.ontrack = (e)=>{\r\n    console.log(e);\r\n    userVideo.current.srcObject =e.streams[0]\r\n    \r\n  }\r\n  connectionRef.current =_pc;\r\n\r\n  }, [])\r\n\r\n  const sendToPeer = (eventType, playLoad)=>{\r\n    socket.emit(eventType,playLoad)\r\n\r\n  }\r\n\r\n  const processSDP= (stream)=>{\r\n    console.log(JSON.stringify(stream));\r\n      connectionRef.current.setLocalDescription(stream);\r\n    sendToPeer('sdp',{stream})\r\n\r\n  }\r\n  const createOffer = ()=>{\r\n    connectionRef.current.createOffer({\r\n      offerToReceiveAudio:true,\r\n      offerToReceiveVideo:true,\r\n    }).then(stream=>{\r\n      processSDP(stream);\r\n      setOfferVisible(false);\r\n      setstatus(\"Callong ....\");\r\n\r\n    }).catch(e=>console.log(e))\r\n  }\r\n\r\n  const createAnswer = () => {\r\n    connectionRef.current.createAnswer({\r\n      offerToReceiveAudio:true,\r\n      offerToReceiveVideo:true,\r\n    }).then(stream=>{\r\n      processSDP(stream);\r\n     setAnswerVisible(false)\r\n     setstatus(\"Call established\")\r\n\r\n    }).catch(e=>console.log(e,\"tttttttttttttttttttttttttttttttttttttttttttt\"))\r\n  }\r\n\r\n  const showHideButton = ()=>{\r\n    if(offerVisible){\r\n      return(\r\n        <div>\r\n          <button onClick={createOffer}>Call</button>\r\n        </div>\r\n      )\r\n      \r\n    }else if(answevisible){\r\n      return(\r\n        <div>\r\n          <button onClick={createAnswer}>Answer</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n\r\n<Box>\r\n\t\t\r\n    <h1 >sehrish</h1>\r\n\t\t\t\t<div>\r\n          {}\r\n        <video   ref={myVideo} autoPlay={true} style={{ width: \"300px\",border:\"1px solid\" }} />\r\n        <video ref={userVideo} autoPlay={true} style={{ width: \"300px\",border:\"1px solid\" }} />\r\n        <br />\r\n        {/* <br /> */}\r\n\r\n        {showHideButton()}\r\n        <div>{status}</div>\r\n        <textarea  ref={textRef}></textarea>\r\n        <br />\r\n        </div>\r\n       </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MeetingScreen","\nimport React from 'react'\nimport './App.css';\n\n\nimport MeetingScreen from './screens/MeetingScreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <BrowserRouter>\n      <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"SearchBar\" element={<SearchBar />} />\n      <Route path=\"JoinMeeting\" element={<JoinMeeting />} />\n      \n      </Routes>\n      </BrowserRouter> */}\n      <MeetingScreen />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}